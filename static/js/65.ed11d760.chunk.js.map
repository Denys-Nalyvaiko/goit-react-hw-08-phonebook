{"version":3,"file":"static/js/65.ed11d760.chunk.js","mappings":"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","sources":["components/ContentLoader/ContentLoader.jsx","css/Containers/Container.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { Hourglass } from 'react-loader-spinner';\n\nconst ContentLoader = () => (\n  <Hourglass\n    visible={true}\n    height=\"60\"\n    width=\"60\"\n    ariaLabel=\"hourglass-loading\"\n    wrapperStyle={{ position: 'absolute', top: '70%', left: '50%',  transform: 'translate(-50%, -50%)' }}\n    wrapperClass=\"\"\n    colors={['#f6d9b1', '#eca541']}\n  />\n);\n\nexport default ContentLoader;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  color: #dca75d;\n  width: 100%;\n  margin: auto;\n  text-align: center;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 30px;\n  color: #dca75d;\n`;\n\nexport const InfoTitle = styled.h3`\n  color: #b36a06;\n`;\n\nexport const HelpfullInformation = styled.p`\n  color: #f6d9b1;\n  width: 100%;\n  margin: auto;\n  margin-top: 20px;\n  font-size: 24px;\n  text-align: center;\n`;\n\nexport const AuthLink = styled(Link)`\n  color: #dca75d;\n  text-decoration: underline;\n`;\n\nexport const ErrorTitle = styled.p`\n  color: #f6d9b1;\n  width: 100%;\n  margin: auto;\n  margin-top: 20px;\n  font-size: 24px;\n  text-align: center;\n`\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\nimport { Box } from '@mui/system';\n\nexport const FormBox = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const RegisterTItle = styled.h2`\n  color: #dca75d;\n  display: block;\n  width: 100vh;\n  margin: 20px auto;\n  text-align: center;\n`;\n\nexport const TextInput = styled(TextField)({\n  '& label': {\n    color: '#f6d9b1',\n  },\n\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#f6d9b1',\n    },\n  },\n});\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Button from '@mui/material/Button';\nimport { signupUser } from '../../redux/auth/authOperations';\nimport { selectIsLoading, selectError } from '../../redux/auth/selectUser';\nimport { FormBox, TextInput } from './RegisterForm.styled';\nimport { ErrorTitle } from 'css/Containers/Container.styled';\nimport ContentLoader from 'components/ContentLoader/ContentLoader';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const options = {\n    name: setName,\n    email: setEmail,\n    password: setPassword,\n  };\n  const nameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const currentUser = { name, email, password };\n    dispatch(signupUser(currentUser));\n\n    reset();\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    options[name](value);\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <FormBox\n        component=\"form\"\n        sx={{\n          '& > :not(style)': {\n            m: 1,\n            width: '32ch',\n            input: { color: '#f6d9b1' },\n          },\n        }}\n        action=\"submit\"\n        onSubmit={handleFormSubmit}\n      >\n        <TextInput\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          required\n          onChange={handleInputChange}\n        />\n        <TextInput\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"email\"\n          name=\"email\"\n          id={emailInputId}\n          value={email}\n          required\n          onChange={handleInputChange}\n        />\n        <TextInput\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          name=\"password\"\n          id={passwordInputId}\n          value={password}\n          required\n          onChange={handleInputChange}\n        />\n        <Button variant=\"outlined\" type=\"submit\">\n          Register\n        </Button>\n      </FormBox>\n\n      {error && <ErrorTitle>{error}</ErrorTitle>}\n      \n      {isLoading && <ContentLoader />}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { RegisterTItle } from 'components/RegisterForm/RegisterForm.styled';\n\nconst RegisterPage = () => (\n  <>\n    <RegisterTItle>Please Register</RegisterTItle>\n    <RegisterForm />\n  </>\n);\n\nexport default RegisterPage;\n"],"names":["_jsx","Hourglass","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","colors","Title","styled","_templateObject","_taggedTemplateLiteral","SectionTitle","_templateObject2","InfoTitle","_templateObject3","HelpfullInformation","_templateObject4","AuthLink","Link","_templateObject5","ErrorTitle","_templateObject6","FormBox","Box","RegisterTItle","TextInput","TextField","color","borderColor","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","error","selectError","options","nameInputId","nanoid","emailInputId","passwordInputId","handleInputChange","event","_event$currentTarget","currentTarget","value","reset","_jsxs","_Fragment","children","component","sx","m","input","action","onSubmit","preventDefault","currentUser","signupUser","label","variant","type","id","required","onChange","Button","ContentLoader","RegisterForm"],"sourceRoot":""}